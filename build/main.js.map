{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["// The adapter-core module gives you access to the core ioBroker functions\r\n// you need to create an adapter\r\nimport * as utils from '@iobroker/adapter-core';\r\n// Load your modules here, e.g.:\r\n// import 'source-map-support/register.js';\r\nimport axios from 'axios';\r\nimport { CronJob } from 'cron';\r\nimport { GeoPosition } from 'geo-position.ts';\r\nimport sourceMapSupport from 'source-map-support';\r\nimport { decrypt, encrypt } from './lib/Helper';\r\nimport { stateAttrb } from './lib/object_definition';\r\nimport { TractiveDevice } from './types/TractiveDevice';\r\n\r\nsourceMapSupport.install();\r\n// Global variables here\r\n\r\nclass TractiveGPS extends utils.Adapter {\r\n\tprivate requestTimer: ioBroker.Timeout | null;\r\n\tprivate interval: number;\r\n\tprivate readonly client_id: string;\r\n\t// private expires_at: number;\r\n\r\n\tprivate readonly allData: TractiveDevice;\r\n\tprivate secret: string;\r\n\r\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n\t\tsuper({\r\n\t\t\t...options,\r\n\t\t\tname: 'tractive-gps',\r\n\t\t});\r\n\t\tthis.on('ready', this.onReady.bind(this));\r\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\r\n\t\tthis.on('message', this.onMessage.bind(this));\r\n\t\tthis.on('unload', this.onUnload.bind(this));\r\n\t\tthis.requestTimer = null;\r\n\t\tthis.interval = 60000;\r\n\t\tthis.client_id = '5f9be055d8912eb21a4cd7ba';\r\n\t\tthis.allData = {\r\n\t\t\tuserInfo: {\r\n\t\t\t\tuser_id: '',\r\n\t\t\t\texpires_at: 0,\r\n\t\t\t},\r\n\t\t\ttrackers: [],\r\n\t\t\ttracker: [],\r\n\t\t\tdevice_hw_report: [],\r\n\t\t\tpositions: [],\r\n\t\t\tdevice_pos_report: [],\r\n\t\t};\r\n\t\tthis.secret = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Is called when databases are connected and adapter received configuration.\r\n\t */\r\n\tprivate async onReady(): Promise<void> {\r\n\t\t// Initialize your adapter here\r\n\t\tthis.writeLog(`[Adapter v.${this.version} onReady] Starting adapter`, 'debug');\r\n\t\t// convert the interval to milliseconds and add a random value between 0 and 100\r\n\t\tthis.interval = this.config.interval * 1000 + Math.floor(Math.random() * 100);\r\n\t\t// Reset the connection indicator during startup\r\n\t\tthis.setState('info.connection', false, true);\r\n\t\tconst obj = await this.getForeignObjectAsync('system.config');\r\n\t\tif (obj && obj.native && obj.native.secret) {\r\n\t\t\tthis.secret = obj.native.secret;\r\n\t\t\tconsole.log('system.config.native.secret found!');\r\n\t\t\tthis.writeLog(`system.config.native.secret found!`, 'debug');\r\n\t\t} else {\r\n\t\t\t// adapter.config.pwd = decrypt('Zgfr56gFe87jJOM', adapter.config.pwd);\r\n\t\t\tconsole.log('Could not find system.config.native.secret!');\r\n\t\t\tthis.writeLog(`Could not find system.config.native.secret!`, 'error');\r\n\t\t}\r\n\t\tconsole.log('this.secret: ' + this.secret);\r\n\t\t// check if the access data are available\r\n\t\tif (this.config.email && this.config.password) {\r\n\t\t\tif (this.config.access_token.startsWith(`$/aes-192-cbc:`)) {\r\n\t\t\t\tthis.writeLog(`Decrypting access_token`, 'debug');\r\n\t\t\t\tawait this.extendForeignObjectAsync(`system.adapter.${this.namespace}`, {\r\n\t\t\t\t\tnative: {\r\n\t\t\t\t\t\taccess_token: encrypt(this.secret, this.decrypt(this.config.access_token)),\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// check if user_id and expires_at is greater than 0 and access_token is present\r\n\t\t\tif (this.config.user_id && this.config.expires_at > 0 && this.config.access_token) {\r\n\t\t\t\t// check if expires_at is smaller than now\r\n\t\t\t\t// convert Date.now() to seconds\r\n\t\t\t\tconst now = Math.round(Date.now() / 1000);\r\n\t\t\t\tif (this.config.expires_at < now) {\r\n\t\t\t\t\t// get new access token when expires_at is smaller than now\r\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} onReady] access_token expired`, 'debug');\r\n\t\t\t\t\tawait this.getAccessToken();\r\n\t\t\t\t\tthis.setState('info.connection', true, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} onReady] access_token valid`, 'debug');\r\n\t\t\t\t\tthis.allData.userInfo.user_id = this.config.user_id;\r\n\t\t\t\t\tthis.allData.userInfo.expires_at = this.config.expires_at;\r\n\t\t\t\t\tawait this.createCronjob();\r\n\t\t\t\t\t// start the requestData timer\r\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} onReady] start requestData`, 'debug');\r\n\t\t\t\t\tawait this.requestData();\r\n\t\t\t\t\tthis.setState('info.connection', true, true);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// get new access token\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} onReady] access_token not available call new access_token`,\r\n\t\t\t\t\t'debug',\r\n\t\t\t\t);\r\n\t\t\t\tawait this.getAccessToken();\r\n\t\t\t\tthis.setState('info.connection', true, true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.writeLog(`[Adapter v.${this.version} onReady] email and password are required`, 'error');\r\n\t\t}\r\n\t}\r\n\r\n\t// create a cronjob to get new access_token wenn expires_at is reached\r\n\tprivate async createCronjob(): Promise<void> {\r\n\t\t// create the cronjob\r\n\t\tthis.writeLog(`[Adapter v.${this.version} createCronjob] create cronjob`, 'debug');\r\n\t\tconst expires_at = this.config.expires_at;\r\n\t\tconsole.log('expires_at: ', new Date(expires_at * 1000));\r\n\t\tconst cronjob = new CronJob(\r\n\t\t\tnew Date(expires_at * 1000),\r\n\t\t\tasync () => {\r\n\t\t\t\tthis.writeLog(`[Adapter v.${this.version} createCronjob] get new access_token`, 'debug');\r\n\t\t\t\tconsole.log(`[Adapter v.${this.version} createCronjob] get new access_token`);\r\n\t\t\t\tawait this.getAccessToken();\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t\ttrue,\r\n\t\t\t'Europe/Berlin',\r\n\t\t);\r\n\t\tconsole.log('cronjob: ', cronjob);\r\n\t}\r\n\r\n\tprivate async requestData(): Promise<void> {\r\n\t\t// Request data from all Key Lights every 5 minutes\r\n\t\tif (this.requestTimer) this.clearTimeout(this.requestTimer);\r\n\t\tawait this.getTrackers();\r\n\t\tawait this.getTrackerInfo();\r\n\t\tawait this.getTrackerDeviceHwReport();\r\n\t\tawait this.getTrackerLocation();\r\n\t\t// await this.getTrackerPosition('1674226858', '1674313258');\r\n\t\tawait this.createStates();\r\n\t\tawait this.writeAllData();\r\n\t\tconsole.log('all data', this.allData);\r\n\t\tthis.requestTimer = this.setTimeout(() => {\r\n\t\t\tthis.writeLog(`[Adapter v.${this.version} requestData] next request in ${this.interval} ms`, 'debug');\r\n\t\t\tthis.requestData();\r\n\t\t}, this.interval);\r\n\t}\r\n\r\n\t// write all data in the state\r\n\tprivate async writeAllData(): Promise<void> {\r\n\t\tfor (const device of this.allData.trackers) {\r\n\t\t\tfor (const [key, value] of Object.entries(device)) {\r\n\t\t\t\tawait this.setStateAsync(`${device._id}.trackers.${key}`, { val: value, ack: true });\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const device of this.allData.tracker) {\r\n\t\t\tfor (const [key, value] of Object.entries(device)) {\r\n\t\t\t\t// if key is capabilities and supported_geofence_types then write the data with JSON.stringify\r\n\t\t\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.tracker.${key}`, {\r\n\t\t\t\t\t\tval: JSON.stringify(value),\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.tracker.${key}`, { val: value, ack: true });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const device of this.allData.device_hw_report) {\r\n\t\t\tfor (const [key, value] of Object.entries(device)) {\r\n\t\t\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_hw_report.${key}`, {\r\n\t\t\t\t\t\tval: JSON.stringify(value),\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_hw_report.${key}`, { val: value, ack: true });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const device of this.allData.device_pos_report) {\r\n\t\t\tfor (const [key, value] of Object.entries(device)) {\r\n\t\t\t\t// if key is latlong then write the data with JSON.stringify and split in latitude,longitude\r\n\t\t\t\tif (key === 'latlong') {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.${key}`, {\r\n\t\t\t\t\t\tval: JSON.stringify(value),\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.latitude`, {\r\n\t\t\t\t\t\tval: value[0],\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.longitude`, {\r\n\t\t\t\t\t\tval: value[1],\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet sysConfig = await this.getForeignObjectAsync('system.config');\r\n\r\n\t\t\t\t\tif (sysConfig && sysConfig.common && sysConfig.common.longitude && sysConfig.common.latitude) {\r\n\t\t\t\t\t\tlet sysPoint = new GeoPosition(sysConfig.common.latitude, sysConfig.common.longitude);\r\n\t\t\t\t\t\tlet petPoint = new GeoPosition(value[0], value[1]);\r\n\r\n\t\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.distance`, {\r\n\t\t\t\t\t\t\tval: Number(sysPoint.Distance(petPoint).toFixed(0)),\r\n\t\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog('No gps coordinates of system found!', \"warn\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.${key}`, {\r\n\t\t\t\t\t\t\tval: JSON.stringify(value),\r\n\t\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait this.setStateAsync(`${device._id}.device_pos_report.${key}`, { val: value, ack: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.allData.positions.length !== 0) {\r\n\t\t\t\tfor (const positionsDevice of this.allData.positions) {\r\n\t\t\t\t\tfor (const [key, value] of Object.entries(positionsDevice)) {\r\n\t\t\t\t\t\tawait this.setStateAsync(`${device._id}.positions.${key}`, {\r\n\t\t\t\t\t\t\tval: JSON.stringify(value),\r\n\t\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// check if the object positions already exists\r\n\t\t\t\tconst obj = await this.getObjectAsync(`${device._id}.positions.0`);\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\tawait this.setStateAsync(`${device._id}.positions.0`, {\r\n\t\t\t\t\t\tval: JSON.stringify([]),\r\n\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait this.setStateAsync('json', JSON.stringify(this.allData), true);\r\n\t}\r\n\r\n\t/**\r\n\t * create the all states for the adapter\r\n\t */\r\n\tprivate async createStates(): Promise<void> {\r\n\t\t// create the device channel for all devices in the this.allData.trackers array\r\n\t\tfor (const device of this.allData.trackers) {\r\n\t\t\t// console.log('device', device);\r\n\t\t\t// create the device channel\r\n\r\n\t\t\tif (this.config.nameArray.length > 0) {\r\n\t\t\t\tconsole.log('this.config.nameArray', this.config.nameArray);\r\n\t\t\t\tfor (const object of this.config.nameArray) {\r\n\t\t\t\t\tif (object.id === device._id) {\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(device._id, {\r\n\t\t\t\t\t\t\ttype: 'device',\r\n\t\t\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\t\t\tname: object.name,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// create the channel for the device\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.trackers`, {\r\n\t\t\t\t\t\t\ttype: 'channel',\r\n\t\t\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\t\t\tname: 'trackers',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.trackers.name`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\t\t\tname: 'name',\r\n\t\t\t\t\t\t\t\tdesc: 'name of the tracker',\r\n\t\t\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\t\t\trole: 'text',\r\n\t\t\t\t\t\t\t\tread: true,\r\n\t\t\t\t\t\t\t\twrite: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tawait this.setStateAsync(`${device._id}.trackers.name`, {\r\n\t\t\t\t\t\t\tval: object.name,\r\n\t\t\t\t\t\t\tack: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait this.setObjectNotExistsAsync(device._id, {\r\n\t\t\t\t\ttype: 'device',\r\n\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\tname: device._id,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnative: {},\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// create the channel for the device\r\n\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.trackers`, {\r\n\t\t\t\t\ttype: 'channel',\r\n\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\tname: 'trackers',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnative: {},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// create the states\r\n\t\t\tfor (const [key] of Object.entries(device)) {\r\n\t\t\t\tconst common: ioBroker.StateCommon = stateAttrb[key as keyof typeof stateAttrb];\r\n\t\t\t\t// console.log('common', device);\r\n\t\t\t\tif (common) {\r\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.trackers.${key}`, {\r\n\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} createStates] no state attribute found for ${key}`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// end of the for loop this.allData.trackers\r\n\t\t}\r\n\t\t// create the device channel for all devices in the this.allData.tracker array\r\n\t\tfor (const device of this.allData.tracker) {\r\n\t\t\t// console.log('device', device);\r\n\t\t\t// create the channel for the device\r\n\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.tracker`, {\r\n\t\t\t\ttype: 'channel',\r\n\t\t\t\tcommon: {\r\n\t\t\t\t\tname: 'tracker',\r\n\t\t\t\t},\r\n\t\t\t\tnative: {},\r\n\t\t\t});\r\n\t\t\t// create the states\r\n\t\t\tfor (const [key] of Object.entries(device)) {\r\n\t\t\t\tconst common: ioBroker.StateCommon = stateAttrb[key as keyof typeof stateAttrb];\r\n\t\t\t\t// console.log('common', device);\r\n\t\t\t\tif (common) {\r\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.tracker.${key}`, {\r\n\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} createStates] no state attribute found for ${key} in tracker`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// end of the for loop this.allData.tracker\r\n\t\t}\r\n\t\t// create the device channel for all devices in the this.allData.device_hw_report array\r\n\t\tfor (const device of this.allData.device_hw_report) {\r\n\t\t\t// console.log('device', device);\r\n\t\t\t// create the channel for the device\r\n\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_hw_report`, {\r\n\t\t\t\ttype: 'channel',\r\n\t\t\t\tcommon: {\r\n\t\t\t\t\tname: 'device hardware report',\r\n\t\t\t\t},\r\n\t\t\t\tnative: {},\r\n\t\t\t});\r\n\t\t\t// create the states\r\n\t\t\tfor (const [key] of Object.entries(device)) {\r\n\t\t\t\tconst common: ioBroker.StateCommon = stateAttrb[key as keyof typeof stateAttrb];\r\n\t\t\t\t// console.log('common', device);\r\n\t\t\t\tif (common) {\r\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_hw_report.${key}`, {\r\n\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} createStates] no state attribute found for ${key} in device_hw_report`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// end of the for loop this.allData.device_hw_report\r\n\t\t}\r\n\t\t// create the device channel for all devices in the this.allData.device_pos_report array\r\n\t\tfor (const device of this.allData.device_pos_report) {\r\n\t\t\t// console.log('device', device);\r\n\t\t\t// create the channel for the device\r\n\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_pos_report`, {\r\n\t\t\t\ttype: 'channel',\r\n\t\t\t\tcommon: {\r\n\t\t\t\t\tname: 'device position report',\r\n\t\t\t\t},\r\n\t\t\t\tnative: {},\r\n\t\t\t});\r\n\t\t\t// create the states\r\n\t\t\tfor (const [key] of Object.entries(device)) {\r\n\t\t\t\tconst common: ioBroker.StateCommon = stateAttrb[key as keyof typeof stateAttrb];\r\n\t\t\t\t// console.log('common', device);\r\n\t\t\t\tif (common) {\r\n\t\t\t\t\tif (key === 'latlong') {\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_pos_report.${key}`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_pos_report.latitude`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: stateAttrb['latitude'],\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_pos_report.longitude`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: stateAttrb['longitude'],\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tawait this.extendObjectAsync(`${device._id}.device_pos_report.distance`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: stateAttrb['distance'],\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.device_pos_report.${key}`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} createStates] no state attribute found for ${key} in device_pos_report`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// create the device channel for all devices in the this.allData.positions array\r\n\t\t\tfor (const positionsDevice of this.allData.positions) {\r\n\t\t\t\t// console.log('device', device);\r\n\t\t\t\t// create the channel for the device\r\n\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.positions`, {\r\n\t\t\t\t\ttype: 'channel',\r\n\t\t\t\t\tcommon: {\r\n\t\t\t\t\t\tname: 'positions',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnative: {},\r\n\t\t\t\t});\r\n\t\t\t\t// // create the states\r\n\t\t\t\tfor (const [key] of Object.entries(positionsDevice)) {\r\n\t\t\t\t\tconst common: ioBroker.StateCommon = stateAttrb['positions'];\r\n\t\t\t\t\t// console.log('common', device);\r\n\t\t\t\t\tif (common) {\r\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${device._id}.positions.${key}`, {\r\n\t\t\t\t\t\t\ttype: 'state',\r\n\t\t\t\t\t\t\tcommon: common,\r\n\t\t\t\t\t\t\tnative: {},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} createStates] no state attribute found for ${key} in positions`,\r\n\t\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// end of the for loop this.allData.device_pos_report\r\n\t\t\t}\r\n\r\n\t\t\t// end of the for loop this.allData.positions\r\n\t\t}\r\n\t\tawait this.setObjectNotExistsAsync(`json`, {\r\n\t\t\ttype: 'state',\r\n\t\t\tcommon: {\r\n\t\t\t\tname: 'json',\r\n\t\t\t\tdesc: 'all data from the api as json',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\trole: 'json',\r\n\t\t\t\tread: true,\r\n\t\t\t\twrite: false,\r\n\t\t\t},\r\n\t\t\tnative: {},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @description a function for log output\r\n\t */\r\n\tprivate writeLog(logText: string, logType: 'silly' | 'info' | 'debug' | 'warn' | 'error'): void {\r\n\t\tif (logType === 'silly') this.log.silly(logText);\r\n\t\tif (logType === 'info') this.log.info(logText);\r\n\t\tif (logType === 'debug') this.log.debug(logText);\r\n\t\tif (logType === 'warn') this.log.warn(logText);\r\n\t\tif (logType === 'error') this.log.error(logText);\r\n\t}\r\n\r\n\t/**\r\n\t * Is called if a subscribed state changes\r\n\t */\r\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tif (state) {\r\n\t\t\tif (state.from === 'system.adapter.' + this.namespace) {\r\n\t\t\t\t// ignore the state change from the adapter itself\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} onStateChange] state ${id} changed: ${state.val} (ack = ${state.ack})`,\r\n\t\t\t\t\t'debug',\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * call all trackers from the user\r\n\t * https://graph.tractive.com/3/user/${this.user_id}/trackers\r\n\t */\r\n\tprivate async getTrackers(): Promise<void> {\r\n\t\t// Request data from api\r\n\t\tconst url = `https://graph.tractive.com/3/user/${this.allData.userInfo.user_id}/trackers`;\r\n\t\tconst options = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t\t'x-tractive-user': this.allData.userInfo.user_id,\r\n\t\t\t\tAuthorization: `Bearer ${this.decrypt(this.config.access_token)}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst response = await axios(url, options);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION} getTrackers] response: ${JSON.stringify(\r\n\t\t\t\t\t\tresponse.data,\r\n\t\t\t\t\t)}`,\r\n\t\t\t\t\t'debug',\r\n\t\t\t\t);\r\n\t\t\t\tif (response.data) {\r\n\t\t\t\t\tthis.allData.trackers = response.data;\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] trackers: ${JSON.stringify(\r\n\t\t\t\t\t\t\tthis.allData.trackers,\r\n\t\t\t\t\t\t)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] trackers: ${JSON.stringify(\r\n\t\t\t\t\t\t\tthis.allData.trackers,\r\n\t\t\t\t\t\t)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] no data`, 'warn');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] error: ${response.status}`,\r\n\t\t\t\t\t'error',\r\n\t\t\t\t);\r\n\t\t\t\tif (response.data) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] response: ${JSON.stringify(\r\n\t\t\t\t\t\t\tresponse.data,\r\n\t\t\t\t\t\t)}`,\r\n\t\t\t\t\t\t'error',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.writeLog(\r\n\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackers] error: ${error}`,\r\n\t\t\t\t'error',\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * call all tracker information\r\n\t * https://graph.tractive.com/3/tracker/${tracker._id}\r\n\t */\r\n\tprivate async getTrackerInfo(): Promise<void> {\r\n\t\tthis.allData.tracker = [];\r\n\t\t// gehe alle tracker durch und hole die informationen\r\n\t\tfor (const tracker of this.allData.trackers) {\r\n\t\t\tconst url = `https://graph.tractive.com/3/tracker/${tracker._id}`;\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t\t\t'x-tractive-user': this.allData.userInfo.user_id,\r\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(this.config.access_token)}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios(url, options);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerInfo] response: ${JSON.stringify(response.data)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tthis.allData.tracker.push(response.data);\r\n\t\t\t\t\t\t// this.tracker.push(response.data);\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t\t}  getTrackerInfo] tracker: ${JSON.stringify(this.allData.tracker)}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t// console.log('tracker Info', this.allData.tracker);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerInfo] no data`,\r\n\t\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerInfo] error: ${error}`,\r\n\t\t\t\t\t'error',\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * call all tracker device_hw_report\r\n\t * https://graph.tractive.com/3/device_hw_report/${tracker._id}\r\n\t */\r\n\tprivate async getTrackerDeviceHwReport(): Promise<void> {\r\n\t\tthis.allData.device_hw_report = [];\r\n\t\t// gehe alle tracker durch und hole die informationen\r\n\t\tfor (const tracker of this.allData.trackers) {\r\n\t\t\tconst url = `https://graph.tractive.com/3/device_hw_report/${tracker._id}`;\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t\t\t'x-tractive-user': this.allData.userInfo.user_id,\r\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(this.config.access_token)}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios(url, options);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerDeviceHwReport] response: ${JSON.stringify(response.data)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tthis.allData.device_hw_report.push(response.data);\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t\t}  getTrackerDeviceHwReport] trackerDeviceHwReport: ${JSON.stringify(\r\n\t\t\t\t\t\t\t\tthis.allData.device_hw_report,\r\n\t\t\t\t\t\t\t)}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t// console.log('tracker DeviceHwReport', this.allData.device_hw_report);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerDeviceHwReport] no data`,\r\n\t\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.response && error.response.data.code === 4002) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerDeviceHwReport] warn: ${JSON.stringify(\r\n\t\t\t\t\t\t\terror.response.data.message,\r\n\t\t\t\t\t\t)} - the tracker does not yet contain any data`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerDeviceHwReport] error: ${error}`,\r\n\t\t\t\t\t\t'error',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * call all tracker location\r\n\t * https://graph.tractive.com/3/device_pos_report/${tracker._id}\r\n\t */\r\n\tprivate async getTrackerLocation(): Promise<void> {\r\n\t\tthis.allData.device_pos_report = [];\r\n\t\t// gehe alle tracker durch und hole die informationen\r\n\t\tfor (const tracker of this.allData.trackers) {\r\n\t\t\tconst url = `https://graph.tractive.com/3/device_pos_report/${tracker._id}`;\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t\t\t'x-tractive-user': this.allData.userInfo.user_id,\r\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(this.config.access_token)}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios(url, options);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerLocation] response: ${JSON.stringify(response.data)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tthis.allData.device_pos_report.push(response.data);\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t\t}  getTrackerLocation] trackerLocation: ${JSON.stringify(this.allData.device_pos_report)}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t// console.log('tracker Location', this.allData.device_pos_report);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerLocation] no data`,\r\n\t\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.response && error.response.data.code === 4002) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerLocation] warn: ${JSON.stringify(\r\n\t\t\t\t\t\t\terror.response.data.message,\r\n\t\t\t\t\t\t)} - the tracker does not yet contain any data`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerLocation] error: ${error}`,\r\n\t\t\t\t\t\t'error',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * call all tracker position\r\n\t * https://graph.tractive.com/3/tracker/CDSOLIJE/positions?time_from=${time_from}&time_to=${time_to}&format=json_segments\r\n\t * time_from = 1.1.2023 00:00:00 in seconds\r\n\t * time_to = 1.1.2023 23:59:59 in seconds\r\n\t * format = json_segments\r\n\t */\r\n\tprivate async getTrackerPosition(time_from: string, time_to: string): Promise<void> {\r\n\t\tthis.allData.positions = [];\r\n\t\t// gehe alle tracker durch und hole die informationen\r\n\t\tfor (const tracker of this.allData.trackers) {\r\n\t\t\tconst url = `https://graph.tractive.com/3/tracker/${tracker._id}/positions?time_from=${time_from}&time_to=${time_to}&format=json_segments`;\r\n\t\t\tconst options = {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t\t\t'x-tractive-user': this.allData.userInfo.user_id,\r\n\t\t\t\t\tAuthorization: `Bearer ${this.decrypt(this.config.access_token)}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios(url, options);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t}  getTrackerPosition] response: ${JSON.stringify(response.data)}`,\r\n\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (response.data) {\r\n\t\t\t\t\t\tthis.allData.positions.push(response.data);\r\n\t\t\t\t\t\tconst testdata: {\r\n\t\t\t\t\t\t\t[key: string]: any;\r\n\t\t\t\t\t\t} = {};\r\n\t\t\t\t\t\ttestdata[tracker._id] = response.data;\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t\t}  getTrackerPosition] trackerPosition: ${JSON.stringify(this.allData.positions)}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t// console.log('tracker Position', this.allData.positions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerPosition] no data`,\r\n\t\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getTrackerPosition] error: ${error}`,\r\n\t\t\t\t\t'error',\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\r\n\t * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\r\n\t * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\r\n\t */\r\n\tprivate async onMessage(obj: ioBroker.Message): Promise<void> {\r\n\t\tif (typeof obj === 'object' && obj.message) {\r\n\t\t\tif (obj.command === 'refreshToken') {\r\n\t\t\t\tthis.writeLog(`[Adapter v.${this.version} onMessage] refresh the Token`, 'debug');\r\n\t\t\t\tawait this.getAccessToken();\r\n\t\t\t\t// Send response in callback if required\r\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Successful', obj.callback);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\r\n\t */\r\n\tprivate async onUnload(callback: () => void): Promise<void> {\r\n\t\ttry {\r\n\t\t\tthis.writeLog(`[Adapter v.${this.version} onUnload] Adapter stopped`, 'debug');\r\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\r\n\t\t\tif (this.requestTimer) this.clearTimeout(this.requestTimer);\r\n\t\t\tthis.setState('info.connection', false, true);\r\n\r\n\t\t\tcallback();\r\n\t\t} catch (e) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async getAccessToken(): Promise<void> {\r\n\t\tconsole.log('getAccessToken');\r\n\t\t// get the access token\r\n\t\tconst url = 'https://graph.tractive.com/3/auth/token';\r\n\t\tconsole.log('url', url);\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-tractive-client': this.client_id,\r\n\t\t\t},\r\n\t\t\tdata: {\r\n\t\t\t\tplatform_email: this.config.email,\r\n\t\t\t\tplatform_token: decrypt(this.secret, this.config.password),\r\n\t\t\t\tgrant_type: 'tractive',\r\n\t\t\t},\r\n\t\t};\r\n\t\tconsole.log('options', options);\r\n\t\ttry {\r\n\t\t\tconst response = await axios(url, options);\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION}  getAccessToken] response: ${JSON.stringify(\r\n\t\t\t\t\t\tresponse.data,\r\n\t\t\t\t\t)}`,\r\n\t\t\t\t\t'debug',\r\n\t\t\t\t);\r\n\t\t\t\tif (response.data) {\r\n\t\t\t\t\tconst obj = await this.getForeignObjectAsync(`system.adapter.${this.namespace}`);\r\n\t\t\t\t\tif (obj) {\r\n\t\t\t\t\t\t// write the data into the config\r\n\t\t\t\t\t\tobj.native.access_token = encrypt(this.secret, response.data.access_token);\r\n\t\t\t\t\t\tobj.native.user_id = response.data.user_id;\r\n\t\t\t\t\t\tobj.native.expires_at = response.data.expires_at;\r\n\t\t\t\t\t\tthis.allData.userInfo.user_id = response.data.user_id;\r\n\t\t\t\t\t\tthis.allData.userInfo.expires_at = response.data.expires_at;\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION\r\n\t\t\t\t\t\t\t}  getAccessToken] obj: ${JSON.stringify(obj)}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tawait this.setForeignObjectAsync(`system.adapter.${this.namespace}`, obj);\r\n\t\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t\t`[Adapter v.${this.version} getAccessToken] new access_token: ${response.data.access_token}`,\r\n\t\t\t\t\t\t\t'debug',\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION} getAccessToken] no data`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (response.data) {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION} getAccessToken] ${response.status} ${response.statusText} ${response.data}`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeLog(\r\n\t\t\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION} getAccessToken] ${response.status} ${response.statusText}`,\r\n\t\t\t\t\t\t'warn',\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.writeLog(\r\n\t\t\t\t`[Adapter v.${this.version} Axios V: ${axios.VERSION} getAccessToken] error: ${error}`,\r\n\t\t\t\t'error',\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (require.main !== module) {\r\n\t// Export the constructor in compact mode\r\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new TractiveGPS(options);\r\n} else {\r\n\t// otherwise start the instance directly\r\n\t(() => new TractiveGPS())();\r\n}\r\n"],
  "mappings": "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",
  "names": ["sourceMapSupport", "axios"]
}
